const fs = require('fs');
const path = require('path');
const dotenv = require('dotenv');

try {
  const env = process.env.ANGULAR_ENV || 'development';
  const envFile = `.env.${env}`;

  console.log(`üéØ D√©marrage de la g√©n√©ration de l'environnement: ${env}`);

  // Charger le fichier .env s'il existe
  if (fs.existsSync(envFile)) {
    dotenv.config({ path: envFile });
    console.log(`üìÅ Fichier ${envFile} charg√© avec succ√®s`);
  } else {
    console.log(`‚ÑπÔ∏è Fichier ${envFile} non trouv√©, utilisation des variables d'environnement`);
  }

  // V√©rification des variables obligatoires
  const requiredVars = {
    'GOOGLE_MAPS_API_KEY': process.env.GOOGLE_MAPS_API_KEY,
    'API_URL': process.env.API_URL
  };

  const missingVars = Object.entries(requiredVars)
    .filter(([value]) => !value)
    .map(([key]) => key);

  if (missingVars.length > 0) {
    console.error(`‚ùå Variables manquantes: ${missingVars.join(', ')}`);
    console.error('üí° V√©rifiez vos secrets GitHub Actions ou votre fichier .env');
    process.exit(1);
  }

  // Pr√©parer le chemin de destination
  const targetPath = './src/environments/environment.ts';
  const targetDir = path.dirname(targetPath);

  // Cr√©er le dossier si n√©cessaire
  if (!fs.existsSync(targetDir)) {
    console.log(`üìÅ Cr√©ation du dossier: ${targetDir}`);
    fs.mkdirSync(targetDir, { recursive: true });
  }

  // G√©n√©rer le contenu du fichier environment.ts
  const envConfigFile = `// ‚ö†Ô∏è Ce fichier est g√©n√©r√© automatiquement - NE PAS MODIFIER MANUELLEMENT
// G√©n√©r√© le: ${new Date().toISOString()}
// Environment: ${env}
export const environment = {
  prod: ${env === 'production'},
  googleMapsApiKey: '${process.env.GOOGLE_MAPS_API_KEY}',
  apiUrl: '${process.env.API_URL}'
};
`;

  // √âcrire le fichier
  fs.writeFileSync(targetPath, envConfigFile, 'utf8');

  // V√©rifier que le fichier a √©t√© cr√©√©
  if (fs.existsSync(targetPath)) {
    console.log(`‚úÖ Fichier d'environnement g√©n√©r√© avec succ√®s: ${targetPath}`);
    console.log(`üìä Statistiques:`);
    console.log(`   - Environment: ${env}`);
    console.log(`   - Production: ${env === 'production'}`);
    console.log(`   - Taille du fichier: ${envConfigFile.length} caract√®res`);
  } else {
    throw new Error(`Le fichier ${targetPath} n'a pas pu √™tre cr√©√©`);
  }

} catch (error) {
  console.error('üí• Erreur lors de la g√©n√©ration du fichier d\'environnement:');
  console.error(error.message);
  process.exit(1);
}
