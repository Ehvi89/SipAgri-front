name: 'Setup Angular Environment'
description: 'Generate environment file and build Angular app'

inputs:
  angular-env:
    description: 'Angular environment'
    required: true
  build-config:
    description: 'Build configuration'
    required: true
  api-url:
    description: 'API URL'
    required: true
  google-maps-api-key:
    description: 'Google Maps API Key'
    required: true

runs:
  using: "composite"
  steps:
    # Étape pour dev → ancien script bash
    - name: Create .env file (development - bash)
      if: inputs.build-config == 'development'
      shell: bash
      run: |
        echo "GOOGLE_MAPS_API_KEY=${{ inputs.google-maps-api-key }}" > .env.${{ inputs.build-config }}
        echo "API_URL=${{ inputs.api-url }}" >> .env.${{ inputs.build-config }}
        cat .env.${{ inputs.build-config }}

    - name: Generate environment file (development - bash)
      if: inputs.build-config == 'development'
      shell: bash
      env:
        API_URL: ${{ inputs.api-url }}
        GOOGLE_MAPS_API_KEY: ${{ inputs.google-maps-api-key }}
        ANGULAR_ENV: ${{ inputs.build-config }}
      run: |
          node set-env.js
          ng build --configuration ${{ inputs.build-config }}


    # Étape pour prod → script PowerShell
    - name: Create .env file (production - pwsh)
      if: inputs.build-config == 'production'
      shell: powershell
      run: |
        "GOOGLE_MAPS_API_KEY=${{ inputs.google-maps-api-key }}" | Out-File -FilePath ".env.${{ inputs.build-config }}" -Encoding UTF8
        "API_URL=${{ inputs.api-url }}" | Out-File -FilePath ".env.${{ inputs.build-config }}" -Encoding UTF8 -Append
        Get-Content ".env.${{ inputs.build-config }}"

    - name: Generate environment file (production - pwsh)
      if: inputs.build-config == 'production'
      shell: powershell
      env:
        API_URL: ${{ inputs.api-url }}
        GOOGLE_MAPS_API_KEY: ${{ inputs.google-maps-api-key }}
      run: npx cross-env ANGULAR_ENV=${{ inputs.angular-env }} node set-env.js
